name: Setup Alpine and Run Scripts

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Alpine with specified packages
        uses: jirutka/setup-alpine@v1
        with:
          branch: v3.15
          packages: >
            argp-standalone
            asciidoc
            autoconf
            automake
            bash
            bc
            binutils
            build-base
            bzip2
            cdrkit
            clang16
            coreutils
            cunit
            curl
            diffutils
            doas
            elfutils-dev
            expat
            findutils
            flex
            g++
            gawk
            gettext
            git
            gnupg
            grep
            gzip
            intltool
            libgit2-dev
            libtool
            libxslt
            linux-headers
            meson
            musl-fts-dev
            musl-libintl
            musl-obstack-dev
            nano
            ncurses-dev
            openssl-dev
            patch
            perl
            perl-utils
            python3-dev
            rsync
            tar
            unzip
            util-linux
            wget
            zlib-dev
            zsh
            zsh-theme-powerlevel10k

      - name: Run script inside Alpine chroot as root
        run: |
          doas sed -i 's|#http://|http://|' /etc/apk/repositories
          doas echo "$(whoami):/bin/bash" | chsh
          doas apk update
          doas apk add argp-standalone asciidoc bash bc binutils bzip2 coreutils diffutils findutils libxslt flex g++ gawk gettext git grep gzip linux-headers musl-libintl
          doas apk add musl-obstack-dev ncurses-dev openssl-dev patch perl python3-dev rsync unzip zlib-dev curl build-base wget gnupg tar perl-utils nano expat cunit autoconf
          doas apk add automake libtool xz elfutils-dev util-linux cmake shadow musl-fts-dev cdrkit intltool
        shell: alpine.sh --root {0}
          
      - name: Run script inside Alpine chroot as the default user (unprivileged)
        run: |
          rm -rf source.openwrt.melmac.net/
          git clone --depth 1 --branch v23.05.3 https://github.com/stangri/source.openwrt.melmac.net.git
          rm -rf openwrt
          git clone --depth 1 --branch v23.05.3 https://git.openwrt.org/openwrt/openwrt.git
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          rm -rf ~/openwrt/package/libs/openssl
          cp -r ~/source.openwrt.melmac.net/quictls ~/openwrt/package/libs/openssl
          rm -rf ~/openwrt/feeds/packages/libs/nghttp3
          cp -r ~/source.openwrt.melmac.net/nghttp3 ~/openwrt/feeds/packages/libs/
          rm -rf ~/openwrt/feeds/packages/libs/ngtcp2
          cp -r ~/source.openwrt.melmac.net/ngtcp2 ~/openwrt/feeds/packages/libs/
          wget -O .config https://gist.githubusercontent.com/Lyceris-chan/da6900825a9c8e83dae47b0bb13484ac/raw/d1e3c3a284e8838833326b3ce4a226c552bcfe77/.config
          make -j$(nproc) defconfig download clean world
          curl -F "file=@openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-asus_rt-ax53u-squashfs-sysupgrade.bin" https://temp.sh/upload
          curl -F "file=@openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-asus_rt-ax53u-squashfs-factory.bin" https://temp.sh/upload
        shell: alpine.sh {0}
